CREATE TABLE TAXI_TIMES (
ICAO CHAR(4) NOT NULL,
APPCODE CHAR(3) NOT NULL,
TAXI_IN INTEGER UNSIGNED NOT NULL DEFAULT 0,
TAXI_OUT INTEGER UNSIGNED NOT NULL DEFAULT 0,
TOTAL_IN INTEGER UNSIGNED NOT NULL DEFAULT 0,
TOTAL_OUT INTEGER UNSIGNED NOT NULL DEFAULT 0,
PRIMARY KEY (ICAO, APPCODE),
FOREIGN KEY (ICAO) REFERENCES common.AIRPORTS(ICAO) ON UPDATE CASCADE ON DELETE CASCADE,
FOREIGN KEY (APPCODE) REFERENCES common.AIRLINEINFO(CODE) ON DELETE CASCADE ON UPDATE CASCADE
) CHARACTER SET latin1;

create table acars.TO (AIRPORT CHAR(4) NOT NULL, CNT INTEGER UNSIGNED NOT NULL, AVGTIME INTEGER UNSIGNED NOT NULL, PRIMARY KEY (AIRPORT), FOREIGN KEY (AIRPORT) REFERENCES common.AIRPORTS(ICAO)) CHARACTER SET latin1;
create table acars.TI (AIRPORT CHAR(4) NOT NULL, CNT INTEGER UNSIGNED NOT NULL, AVGTIME INTEGER UNSIGNED NOT NULL, PRIMARY KEY (AIRPORT), FOREIGN KEY (AIRPORT) REFERENCES common.AIRPORTS(ICAO)) CHARACTER SET latin1;

use dva;

start transaction;
INSERT INTO acars.TO (SELECT AP.ICAO AS APCODE, COUNT(AP.ACARS_ID) AS CNT, AVG(TIMESTAMPDIFF(SECOND, TAXI_TIME, TAKEOFF_TIME)) AS TX_TKO FROM common.AIRPORTS AP, PIREPS P, ACARS_PIREPS AP WHERE (AP.IATA=P.AIRPORT_D) AND (P.ID=AP.ID) AND (P.STATUS=3) AND (P.DATE > DATE_SUB(CURDATE(), INTERVAL 5 YEAR)) AND (AP.TAXI_TIME < AP.TAKEOFF_TIME) AND (AP.TAKEOFF_TIME < DATE_ADD(AP.TAXI_TIME, INTERVAL 2 HOUR)) GROUP BY APCODE);
INSERT INTO acars.TI (SELECT AP.ICAO AS APCODE, COUNT(AP.ACARS_ID) AS CNT, AVG(TIMESTAMPDIFF(SECOND, TAXI_TIME, TAKEOFF_TIME)) AS TX_TKO FROM common.AIRPORTS AP, PIREPS P, ACARS_PIREPS AP WHERE (AP.IATA=P.AIRPORT_A) AND (P.ID=AP.ID) AND (P.STATUS=3) AND (P.DATE > DATE_SUB(CURDATE(), INTERVAL 5 YEAR)) AND (AP.LANDING_TIME < AP.END_TIME) AND (AP.END_TIME < DATE_ADD(AP.LANDING_TIME, INTERVAL 2 HOUR)) GROUP BY APCODE);

INSERT INTO acars.TAXI_TIMES (SELECT AIRPORT, 'DVA', AVGTIME, 0, CNT, 0 FROM acars.TI);
INSERT INTO acars.TAXI_TIMES SELECT AIRPORT, 'DVA', 0, AVGTIME, 0, CNT FROM acars.TO AS N ON DUPLICATE KEY UPDATE TAXI_OUT=N.AVGTIME, TOTAL_OUT=N.CNT;

commit;

truncate acars.TO;
truncate acars.TI;

use afv;

start transaction;
INSERT INTO acars.TO (SELECT AP.ICAO AS APCODE, COUNT(AP.ACARS_ID) AS CNT, AVG(TIMESTAMPDIFF(SECOND, TAXI_TIME, TAKEOFF_TIME)) AS TX_TKO FROM common.AIRPORTS AP, PIREPS P, ACARS_PIREPS AP WHERE (AP.IATA=P.AIRPORT_D) AND (P.ID=AP.ID) AND (P.STATUS=3) AND (P.DATE > DATE_SUB(CURDATE(), INTERVAL 5 YEAR)) AND (AP.TAXI_TIME < AP.TAKEOFF_TIME) AND (AP.TAKEOFF_TIME < DATE_ADD(AP.TAXI_TIME, INTERVAL 2 HOUR)) GROUP BY APCODE);
INSERT INTO acars.TI (SELECT AP.ICAO AS APCODE, COUNT(AP.ACARS_ID) AS CNT, AVG(TIMESTAMPDIFF(SECOND, TAXI_TIME, TAKEOFF_TIME)) AS TX_TKO FROM common.AIRPORTS AP, PIREPS P, ACARS_PIREPS AP WHERE (AP.IATA=P.AIRPORT_A) AND (P.ID=AP.ID) AND (P.STATUS=3) AND (P.DATE > DATE_SUB(CURDATE(), INTERVAL 5 YEAR)) AND (AP.LANDING_TIME < AP.END_TIME) AND (AP.END_TIME < DATE_ADD(AP.LANDING_TIME, INTERVAL 2 HOUR)) GROUP BY APCODE);

INSERT INTO acars.TAXI_TIMES (SELECT AIRPORT, 'AFV', AVGTIME, 0, CNT, 0 FROM acars.TI);
INSERT INTO acars.TAXI_TIMES SELECT AIRPORT, 'AFV', 0, AVGTIME, 0, CNT FROM acars.TO AS N ON DUPLICATE KEY UPDATE TAXI_OUT=N.AVGTIME, TOTAL_OUT=N.CNT;

commit;

drop table acars.TO;
drop table acars.TI;
